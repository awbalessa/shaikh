// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: documents.sql

package database

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getDocumentByID = `-- name: GetDocumentByID :one
SELECT source, document, surah, ayah FROM documents
WHERE id = $1
`

type GetDocumentByIDRow struct {
	Source   Source
	Document string
	Surah    pgtype.Int4
	Ayah     pgtype.Int4
}

func (q *Queries) GetDocumentByID(ctx context.Context, id int32) (GetDocumentByIDRow, error) {
	row := q.db.QueryRow(ctx, getDocumentByID, id)
	var i GetDocumentByIDRow
	err := row.Scan(
		&i.Source,
		&i.Document,
		&i.Surah,
		&i.Ayah,
	)
	return i, err
}

const getDocumentByKey = `-- name: GetDocumentByKey :one
SELECT id, source, document FROM documents
WHERE surah = $1 AND ayah = $2
`

type GetDocumentByKeyParams struct {
	Surah pgtype.Int4
	Ayah  pgtype.Int4
}

type GetDocumentByKeyRow struct {
	ID       int32
	Source   Source
	Document string
}

func (q *Queries) GetDocumentByKey(ctx context.Context, arg GetDocumentByKeyParams) (GetDocumentByKeyRow, error) {
	row := q.db.QueryRow(ctx, getDocumentByKey, arg.Surah, arg.Ayah)
	var i GetDocumentByKeyRow
	err := row.Scan(&i.ID, &i.Source, &i.Document)
	return i, err
}
