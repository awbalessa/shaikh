{{- if and .Values.seed.enabled .Release.IsInstall -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.cluster.name }}-seed-import
  labels: {{- include "postgres.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    spec:
      restartPolicy: Never
      volumes:
        - name: dump-volume
          emptyDir: {}
        - name: gcs-sa-key
          secret:
            secretName: {{ default .Values.gcs.saSecretName .Values.gcs.existingSecret }}
      initContainers:
        - name: fetch-dump
          image: {{ .Values.seed.fetchImage }}
          command:
            - /bin/bash
            - -c
            - |
              set -euo pipefail
              echo "ðŸ”‘ Activating service account..."
              gcloud auth activate-service-account --key-file=/var/secrets/{{ .Values.gcs.keyFileName }}
              echo "ðŸ“¥ Downloading dump from GCS..."
              gsutil cp {{ .Values.seed.gcsDumpPath }} /dumps/latest.dump
          volumeMounts:
            - name: gcs-sa-key
              mountPath: /var/secrets
              readOnly: true
            - name: dump-volume
              mountPath: /dumps
      containers:
        - name: restore-dump
          image: {{ .Values.seed.restoreImage }}
          command:
            - /bin/bash
            - -c
            - |
              set -euo pipefail
              echo "ðŸ“¦ Restoring data into Postgres..."
              PGPASSWORD=$POSTGRES_PASSWORD \
              pg_restore \
                -U {{ .Values.secrets.sudo.username }} \
                -h {{ .Values.cluster.name }}-rw.{{ .Release.Namespace }}.svc.cluster.local \
                -d {{ .Values.bootstrap.database }} \
                -j 4 \
                --clean --no-owner --no-privileges \
                /dumps/latest.dump
              echo "âœ… Import complete"
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.sudo.name }}
                  key: password
          volumeMounts:
            - name: dump-volume
              mountPath: /dumps
{{- end }}
