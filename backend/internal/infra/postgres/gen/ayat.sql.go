// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: ayat.sql

package db

import (
	"context"
)

const getAyatByKeys = `-- name: GetAyatByKeys :many
SELECT surah, ayah, ar, ar_uthmani, en FROM rag.ayat
WHERE surah = $1
    AND ayah = ANY($2::rag.ayah[])
`

type GetAyatByKeysParams struct {
	Surah RagSurah  `db:"surah"`
	Ayat  []RagAyah `db:"ayat"`
}

func (q *Queries) GetAyatByKeys(ctx context.Context, arg GetAyatByKeysParams) ([]RagAyat, error) {
	rows, err := q.db.Query(ctx, getAyatByKeys, arg.Surah, arg.Ayat)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []RagAyat{}
	for rows.Next() {
		var i RagAyat
		if err := rows.Scan(
			&i.Surah,
			&i.Ayah,
			&i.Ar,
			&i.ArUthmani,
			&i.En,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
