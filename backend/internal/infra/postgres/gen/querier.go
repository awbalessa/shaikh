// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	CreateMemory(ctx context.Context, arg CreateMemoryParams) (Memory, error)
	CreateMessage(ctx context.Context, arg CreateMessageParams) (Message, error)
	CreateSession(ctx context.Context, arg CreateSessionParams) (Session, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	GetAyatByKeys(ctx context.Context, arg GetAyatByKeysParams) ([]RagAyat, error)
	GetDocumentByID(ctx context.Context, id int32) (GetDocumentByIDRow, error)
	GetDocumentByKey(ctx context.Context, arg GetDocumentByKeyParams) (GetDocumentByKeyRow, error)
	GetMemoriesByUserID(ctx context.Context, arg GetMemoriesByUserIDParams) ([]Memory, error)
	GetMemoryByID(ctx context.Context, id int32) (Memory, error)
	GetMessageByID(ctx context.Context, id int32) (Message, error)
	GetMessagesBySessionID(ctx context.Context, sessionID uuid.UUID) ([]Message, error)
	GetMessagesBySessionIDAsc(ctx context.Context, sessionID uuid.UUID) ([]Message, error)
	GetMessagesBySessionIdOrdered(ctx context.Context, sessionID uuid.UUID) ([]Message, error)
	GetSessionByID(ctx context.Context, id uuid.UUID) (Session, error)
	GetSessionsByUserID(ctx context.Context, arg GetSessionsByUserIDParams) ([]Session, error)
	GetUserByID(ctx context.Context, id uuid.UUID) (User, error)
	GetUserMessagesByUserID(ctx context.Context, arg GetUserMessagesByUserIDParams) ([]Message, error)
	LexicalSearch(ctx context.Context, arg LexicalSearchParams) ([]LexicalSearchRow, error)
	SemanticSearch(ctx context.Context, arg SemanticSearchParams) ([]SemanticSearchRow, error)
	UpdateMemoryByID(ctx context.Context, arg UpdateMemoryByIDParams) (Memory, error)
}

var _ Querier = (*Queries)(nil)
