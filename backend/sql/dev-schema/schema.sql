--
-- PostgreSQL database dump
--

-- Dumped from database version 17.5 (Homebrew)
-- Dumped by pg_dump version 17.5 (Homebrew)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: paradedb; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA paradedb;


--
-- Name: rag; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA rag;


--
-- Name: pg_search; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pg_search WITH SCHEMA paradedb;


--
-- Name: vector; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS vector WITH SCHEMA public;


--
-- Name: vectorscale; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS vectorscale WITH SCHEMA public;


--
-- Name: content_type; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE public.content_type AS ENUM (
    'tafsir'
);


--
-- Name: granularity; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE public.granularity AS ENUM (
    'phrase',
    'ayah',
    'surah',
    'quran'
);


--
-- Name: messages_role; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE public.messages_role AS ENUM (
    'user',
    'model',
    'function'
);


--
-- Name: source; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE public.source AS ENUM (
    'Tafsir Ibn Kathir',
    'Tafsir Al Tabari',
    'Tafsir Al Qurtubi',
    'Tafsir Al Baghawi',
    'Tafsir Al Saadi',
    'Tafsir Al Muyassar',
    'Tafsir Al Wasit',
    'Tafsir Al Jalalayn',
    'Tafsir Tanwir Al Miqbas'
);


SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: goose_db_version; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.goose_db_version (
    id integer NOT NULL,
    version_id bigint NOT NULL,
    is_applied boolean NOT NULL,
    tstamp timestamp without time zone DEFAULT now() NOT NULL
);


--
-- Name: goose_db_version_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.goose_db_version ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.goose_db_version_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: memories; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.memories (
    id integer NOT NULL,
    user_id uuid,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    memory text NOT NULL
);


--
-- Name: memories_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.memories ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.memories_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: messages; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.messages (
    id integer NOT NULL,
    session_id uuid,
    user_id uuid,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    role public.messages_role NOT NULL,
    content text NOT NULL,
    turn integer NOT NULL,
    function_name text
);


--
-- Name: messages_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.messages ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.messages_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: sessions; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.sessions (
    id uuid NOT NULL,
    user_id uuid,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    ended_at timestamp with time zone,
    summary text
);


--
-- Name: users; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.users (
    id uuid NOT NULL,
    email text NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL
);


--
-- Name: ayat; Type: TABLE; Schema: rag; Owner: -
--

CREATE TABLE rag.ayat (
    surah integer NOT NULL,
    ayah integer NOT NULL,
    ar text NOT NULL,
    ar_uthmani text NOT NULL,
    en text NOT NULL
);


--
-- Name: chunks; Type: TABLE; Schema: rag; Owner: -
--

CREATE TABLE rag.chunks (
    id bigint NOT NULL,
    sequence_id integer NOT NULL,
    created_at timestamp without time zone DEFAULT now() NOT NULL,
    updated_at timestamp without time zone DEFAULT now() NOT NULL,
    granularity public.granularity NOT NULL,
    content_type public.content_type NOT NULL,
    source public.source NOT NULL,
    raw_chunk text NOT NULL,
    tokenized_chunk text NOT NULL,
    chunk_title text NOT NULL,
    tokenized_chunk_title text NOT NULL,
    context_header text NOT NULL,
    embedded_chunk text NOT NULL,
    labels smallint[] NOT NULL,
    embedding public.vector(1024) NOT NULL,
    has_parent boolean NOT NULL,
    parent_id integer,
    surah integer,
    ayah integer
);


--
-- Name: chunks_id_seq; Type: SEQUENCE; Schema: rag; Owner: -
--

ALTER TABLE rag.chunks ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME rag.chunks_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: documents; Type: TABLE; Schema: rag; Owner: -
--

CREATE TABLE rag.documents (
    id integer NOT NULL,
    created_at timestamp without time zone DEFAULT now() NOT NULL,
    updated_at timestamp without time zone DEFAULT now() NOT NULL,
    granularity public.granularity NOT NULL,
    content_type public.content_type NOT NULL,
    source public.source NOT NULL,
    context_header text NOT NULL,
    document text NOT NULL,
    surah integer,
    ayah integer
);


--
-- Name: documents_id_seq; Type: SEQUENCE; Schema: rag; Owner: -
--

ALTER TABLE rag.documents ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME rag.documents_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: goose_db_version goose_db_version_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.goose_db_version
    ADD CONSTRAINT goose_db_version_pkey PRIMARY KEY (id);


--
-- Name: memories memories_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.memories
    ADD CONSTRAINT memories_pkey PRIMARY KEY (id);


--
-- Name: messages messages_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.messages
    ADD CONSTRAINT messages_pkey PRIMARY KEY (id);


--
-- Name: sessions sessions_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.sessions
    ADD CONSTRAINT sessions_pkey PRIMARY KEY (id);


--
-- Name: messages unique_session_id_turn_role_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.messages
    ADD CONSTRAINT unique_session_id_turn_role_key UNIQUE (session_id, role, turn);


--
-- Name: users users_email_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_email_key UNIQUE (email);


--
-- Name: users users_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);


--
-- Name: ayat ayat_pkey; Type: CONSTRAINT; Schema: rag; Owner: -
--

ALTER TABLE ONLY rag.ayat
    ADD CONSTRAINT ayat_pkey PRIMARY KEY (surah, ayah);


--
-- Name: chunks chunks_pkey; Type: CONSTRAINT; Schema: rag; Owner: -
--

ALTER TABLE ONLY rag.chunks
    ADD CONSTRAINT chunks_pkey PRIMARY KEY (id);


--
-- Name: documents documents_context_header_key; Type: CONSTRAINT; Schema: rag; Owner: -
--

ALTER TABLE ONLY rag.documents
    ADD CONSTRAINT documents_context_header_key UNIQUE (context_header);


--
-- Name: documents documents_pkey; Type: CONSTRAINT; Schema: rag; Owner: -
--

ALTER TABLE ONLY rag.documents
    ADD CONSTRAINT documents_pkey PRIMARY KEY (id);


--
-- Name: chunks unique_context_header_sequence_id_key; Type: CONSTRAINT; Schema: rag; Owner: -
--

ALTER TABLE ONLY rag.chunks
    ADD CONSTRAINT unique_context_header_sequence_id_key UNIQUE (context_header, sequence_id);


--
-- Name: idx_memories_user_id; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX idx_memories_user_id ON public.memories USING btree (user_id);


--
-- Name: idx_messages_session_id; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX idx_messages_session_id ON public.messages USING btree (session_id);


--
-- Name: idx_messages_user_id; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX idx_messages_user_id ON public.messages USING btree (user_id);


--
-- Name: idx_sessions_user_id; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX idx_sessions_user_id ON public.sessions USING btree (user_id);


--
-- Name: bm25_chunks_tokenized_chunk; Type: INDEX; Schema: rag; Owner: -
--

CREATE INDEX bm25_chunks_tokenized_chunk ON rag.chunks USING bm25 (id, tokenized_chunk, tokenized_chunk_title, content_type, source, surah, ayah) WITH (key_field=id, text_fields='{
        "tokenized_chunk": {
            "tokenizer": {"type": "whitespace", "stemmer": "Arabic"}
        },
        "tokenized_chunk_title": {
            "tokenizer": {"type": "whitespace", "stemmer": "Arabic"}
        }
    }', numeric_fields='{
        "surah": {"fast": true},
        "ayah": {"fast": true},
        "content_type": {"fast": true},
        "source": {"fast": true}
    }');


--
-- Name: btree_chunks_content_type; Type: INDEX; Schema: rag; Owner: -
--

CREATE INDEX btree_chunks_content_type ON rag.chunks USING btree (content_type);


--
-- Name: btree_chunks_source; Type: INDEX; Schema: rag; Owner: -
--

CREATE INDEX btree_chunks_source ON rag.chunks USING btree (source);


--
-- Name: btree_chunks_surah_ayah; Type: INDEX; Schema: rag; Owner: -
--

CREATE INDEX btree_chunks_surah_ayah ON rag.chunks USING btree (surah, ayah);


--
-- Name: diskann_chunks_embedding_labels; Type: INDEX; Schema: rag; Owner: -
--

CREATE INDEX diskann_chunks_embedding_labels ON rag.chunks USING diskann (embedding, labels);


--
-- Name: idx_documents_content_type; Type: INDEX; Schema: rag; Owner: -
--

CREATE INDEX idx_documents_content_type ON rag.documents USING btree (content_type);


--
-- Name: idx_documents_source; Type: INDEX; Schema: rag; Owner: -
--

CREATE INDEX idx_documents_source ON rag.documents USING btree (source);


--
-- Name: idx_documents_surah_ayah; Type: INDEX; Schema: rag; Owner: -
--

CREATE INDEX idx_documents_surah_ayah ON rag.documents USING btree (surah, ayah);


--
-- Name: memories memories_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.memories
    ADD CONSTRAINT memories_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;


--
-- Name: messages messages_session_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.messages
    ADD CONSTRAINT messages_session_id_fkey FOREIGN KEY (session_id) REFERENCES public.sessions(id) ON DELETE CASCADE;


--
-- Name: messages messages_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.messages
    ADD CONSTRAINT messages_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;


--
-- Name: sessions sessions_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.sessions
    ADD CONSTRAINT sessions_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;


--
-- Name: chunks chunks_parent_id_fkey; Type: FK CONSTRAINT; Schema: rag; Owner: -
--

ALTER TABLE ONLY rag.chunks
    ADD CONSTRAINT chunks_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES rag.documents(id);


--
-- Name: chunks chunks_surah_ayah_fkey; Type: FK CONSTRAINT; Schema: rag; Owner: -
--

ALTER TABLE ONLY rag.chunks
    ADD CONSTRAINT chunks_surah_ayah_fkey FOREIGN KEY (surah, ayah) REFERENCES rag.ayat(surah, ayah);


--
-- Name: documents documents_surah_ayah_fkey; Type: FK CONSTRAINT; Schema: rag; Owner: -
--

ALTER TABLE ONLY rag.documents
    ADD CONSTRAINT documents_surah_ayah_fkey FOREIGN KEY (surah, ayah) REFERENCES rag.ayat(surah, ayah);


--
-- PostgreSQL database dump complete
--

